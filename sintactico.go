// Code generated by goyacc - DO NOT EDIT.

// +build ignore
package main

import __yyfmt__ "fmt"

import (
	"bufio"
	"fmt"
	"log"
	//"archivos/MIA-Proyecto1_201709454/analizador/arbol"
	"os"
	"proyectos/MIAProyectoFase1/analizador/arbol"
)

var oParametro arbol.Parametro
var oInstruccion arbol.Instruccion
var lInstruccion []arbol.Instruccion
var lAST []arbol.AST
var auxPath string

type yySymType struct {
	yys   int
	value string
}

type yyXError struct {
	state, xsym int
}

const (
	yyDefault    = 57413
	yyEofCode    = 57344
	add          = 57382
	archivo      = 57410
	asignacion   = 57346
	bf           = 57401
	cat          = 57364
	chgrp        = 57373
	chmod        = 57362
	chown        = 57372
	cont         = 57392
	cp           = 57369
	delete       = 57381
	dest         = 57396
	e            = 57399
	edit         = 57366
	yyErrCode    = 57345
	exec         = 57348
	fast         = 57405
	fdisk        = 57352
	ff           = 57402
	filen        = 57394
	find         = 57371
	fit          = 57380
	full         = 57404
	grp          = 57388
	guion        = 57347
	id           = 57384
	idn          = 57383
	k            = 57397
	l            = 57400
	login        = 57356
	logout       = 57357
	loss         = 57393
	m            = 57398
	mkdir        = 57368
	mkdisk       = 57350
	mkfile       = 57363
	mkfs         = 57355
	mkgrp        = 57358
	mkusr        = 57360
	mount        = 57353
	mv           = 57370
	name         = 57377
	numero       = 57407
	p            = 57391
	path         = 57375
	pause        = 57349
	pwd          = 57387
	r            = 57390
	recovery     = 57412
	rem          = 57365
	ren          = 57367
	rep          = 57374
	rf           = 57395
	rid          = 57406
	rmdisk       = 57351
	rmgrp        = 57359
	rmusr        = 57361
	rruta        = 57411
	rtype        = 57379
	rutaCompleja = 57409
	rutaSimple   = 57408
	size         = 57376
	tipo         = 57385
	ugo          = 57389
	unit         = 57378
	unmount      = 57354
	usr          = 57386
	wf           = 57403

	yyMaxDepth = 200
	yyTabOfs   = -135
)

var (
	yyPrec = map[int]int{}

	yyXLAT = map[int]int{
		57347: 0,   // guion (145x)
		57344: 1,   // $end (133x)
		57364: 2,   // cat (133x)
		57373: 3,   // chgrp (133x)
		57348: 4,   // exec (133x)
		57352: 5,   // fdisk (133x)
		57356: 6,   // login (133x)
		57357: 7,   // logout (133x)
		57393: 8,   // loss (133x)
		57368: 9,   // mkdir (133x)
		57350: 10,  // mkdisk (133x)
		57363: 11,  // mkfile (133x)
		57355: 12,  // mkfs (133x)
		57358: 13,  // mkgrp (133x)
		57360: 14,  // mkusr (133x)
		57353: 15,  // mount (133x)
		57349: 16,  // pause (133x)
		57412: 17,  // recovery (133x)
		57365: 18,  // rem (133x)
		57367: 19,  // ren (133x)
		57374: 20,  // rep (133x)
		57351: 21,  // rmdisk (133x)
		57354: 22,  // unmount (133x)
		57439: 23,  // PARAMETRO_PATH (18x)
		57346: 24,  // asignacion (17x)
		57435: 25,  // PARAMETRO_ID (9x)
		57437: 26,  // PARAMETRO_NAME (8x)
		57442: 27,  // PARAMETRO_SIZE (8x)
		57384: 28,  // id (7x)
		57409: 29,  // rutaCompleja (7x)
		57434: 30,  // PARAMETRO_GRP (6x)
		57440: 31,  // PARAMETRO_PWD (6x)
		57446: 32,  // PARAMETRO_USR (6x)
		57375: 33,  // path (6x)
		57377: 34,  // name (5x)
		57406: 35,  // rid (5x)
		57410: 36,  // archivo (4x)
		57407: 37,  // numero (4x)
		57433: 38,  // PARAMETRO_FIT (4x)
		57438: 39,  // PARAMETRO_P (4x)
		57445: 40,  // PARAMETRO_UNIT (4x)
		57449: 41,  // VALOR_NAME (4x)
		57408: 42,  // rutaSimple (3x)
		57376: 43,  // size (3x)
		57450: 44,  // VALOR_PATH (3x)
		57405: 45,  // fast (2x)
		57380: 46,  // fit (2x)
		57404: 47,  // full (2x)
		57388: 48,  // grp (2x)
		57415: 49,  // INSTRUCCION (2x)
		57422: 50,  // LST_MKFILE (2x)
		57425: 51,  // LST_MKUSR (2x)
		57391: 52,  // p (2x)
		57430: 53,  // PARAMETRO_ADD (2x)
		57431: 54,  // PARAMETRO_DELETE (2x)
		57432: 55,  // PARAMETRO_FILEN (2x)
		57441: 56,  // PARAMETRO_RUTA (2x)
		57443: 57,  // PARAMETRO_TYPE (2x)
		57444: 58,  // PARAMETRO_TYPE_FS (2x)
		57387: 59,  // pwd (2x)
		57379: 60,  // rtype (2x)
		57378: 61,  // unit (2x)
		57386: 62,  // usr (2x)
		57447: 63,  // VALOR_DELETE (2x)
		57382: 64,  // add (1x)
		57401: 65,  // bf (1x)
		57381: 66,  // delete (1x)
		57399: 67,  // e (1x)
		57402: 68,  // ff (1x)
		57394: 69,  // filen (1x)
		57414: 70,  // INICIO (1x)
		57397: 71,  // k (1x)
		57400: 72,  // l (1x)
		57416: 73,  // LISTA_INSTRUCCION (1x)
		57417: 74,  // LST_CAT (1x)
		57418: 75,  // LST_FDISK (1x)
		57419: 76,  // LST_LOGIN (1x)
		57420: 77,  // LST_MKDIR (1x)
		57421: 78,  // LST_MKDIS (1x)
		57423: 79,  // LST_MKFS (1x)
		57424: 80,  // LST_MKGRP (1x)
		57426: 81,  // LST_MOUNT (1x)
		57427: 82,  // LST_REM (1x)
		57428: 83,  // LST_REN (1x)
		57429: 84,  // LST_REP (1x)
		57398: 85,  // m (1x)
		57411: 86,  // rruta (1x)
		57448: 87,  // VALOR_FIT (1x)
		57451: 88,  // VALOR_TYPE (1x)
		57452: 89,  // VALOR_UNIT (1x)
		57403: 90,  // wf (1x)
		57413: 91,  // $default (0x)
		57362: 92,  // chmod (0x)
		57372: 93,  // chown (0x)
		57392: 94,  // cont (0x)
		57369: 95,  // cp (0x)
		57396: 96,  // dest (0x)
		57366: 97,  // edit (0x)
		57345: 98,  // error (0x)
		57371: 99,  // find (0x)
		57383: 100, // idn (0x)
		57370: 101, // mv (0x)
		57436: 102, // PARAMETRO_IDN (0x)
		57390: 103, // r (0x)
		57395: 104, // rf (0x)
		57359: 105, // rmgrp (0x)
		57361: 106, // rmusr (0x)
		57385: 107, // tipo (0x)
		57389: 108, // ugo (0x)
	}

	yySymNames = []string{
		"guion",
		"$end",
		"cat",
		"chgrp",
		"exec",
		"fdisk",
		"login",
		"logout",
		"loss",
		"mkdir",
		"mkdisk",
		"mkfile",
		"mkfs",
		"mkgrp",
		"mkusr",
		"mount",
		"pause",
		"recovery",
		"rem",
		"ren",
		"rep",
		"rmdisk",
		"unmount",
		"PARAMETRO_PATH",
		"asignacion",
		"PARAMETRO_ID",
		"PARAMETRO_NAME",
		"PARAMETRO_SIZE",
		"id",
		"rutaCompleja",
		"PARAMETRO_GRP",
		"PARAMETRO_PWD",
		"PARAMETRO_USR",
		"path",
		"name",
		"rid",
		"archivo",
		"numero",
		"PARAMETRO_FIT",
		"PARAMETRO_P",
		"PARAMETRO_UNIT",
		"VALOR_NAME",
		"rutaSimple",
		"size",
		"VALOR_PATH",
		"fast",
		"fit",
		"full",
		"grp",
		"INSTRUCCION",
		"LST_MKFILE",
		"LST_MKUSR",
		"p",
		"PARAMETRO_ADD",
		"PARAMETRO_DELETE",
		"PARAMETRO_FILEN",
		"PARAMETRO_RUTA",
		"PARAMETRO_TYPE",
		"PARAMETRO_TYPE_FS",
		"pwd",
		"rtype",
		"unit",
		"usr",
		"VALOR_DELETE",
		"add",
		"bf",
		"delete",
		"e",
		"ff",
		"filen",
		"INICIO",
		"k",
		"l",
		"LISTA_INSTRUCCION",
		"LST_CAT",
		"LST_FDISK",
		"LST_LOGIN",
		"LST_MKDIR",
		"LST_MKDIS",
		"LST_MKFS",
		"LST_MKGRP",
		"LST_MOUNT",
		"LST_REM",
		"LST_REN",
		"LST_REP",
		"m",
		"rruta",
		"VALOR_FIT",
		"VALOR_TYPE",
		"VALOR_UNIT",
		"wf",
		"$default",
		"chmod",
		"chown",
		"cont",
		"cp",
		"dest",
		"edit",
		"error",
		"find",
		"idn",
		"mv",
		"PARAMETRO_IDN",
		"r",
		"rf",
		"rmgrp",
		"rmusr",
		"tipo",
		"ugo",
	}

	yyTokenLiteralStrings = map[int]string{}

	yyReductions = map[int]struct{ xsym, components int }{
		0:   {0, 1},
		1:   {70, 1},
		2:   {73, 2},
		3:   {73, 1},
		4:   {49, 1},
		5:   {49, 1},
		6:   {49, 2},
		7:   {49, 2},
		8:   {49, 2},
		9:   {49, 2},
		10:  {49, 2},
		11:  {49, 2},
		12:  {49, 2},
		13:  {49, 2},
		14:  {49, 2},
		15:  {49, 2},
		16:  {49, 2},
		17:  {49, 2},
		18:  {49, 2},
		19:  {49, 2},
		20:  {49, 2},
		21:  {49, 2},
		22:  {49, 2},
		23:  {49, 2},
		24:  {49, 2},
		25:  {83, 2},
		26:  {83, 2},
		27:  {83, 1},
		28:  {83, 1},
		29:  {74, 2},
		30:  {74, 1},
		31:  {82, 2},
		32:  {82, 1},
		33:  {77, 2},
		34:  {77, 2},
		35:  {77, 1},
		36:  {77, 1},
		37:  {50, 2},
		38:  {50, 2},
		39:  {50, 2},
		40:  {50, 1},
		41:  {50, 1},
		42:  {50, 1},
		43:  {51, 2},
		44:  {51, 2},
		45:  {51, 2},
		46:  {51, 1},
		47:  {51, 1},
		48:  {51, 1},
		49:  {80, 2},
		50:  {80, 1},
		51:  {76, 2},
		52:  {76, 2},
		53:  {76, 2},
		54:  {76, 1},
		55:  {76, 1},
		56:  {76, 1},
		57:  {79, 2},
		58:  {79, 2},
		59:  {79, 1},
		60:  {79, 1},
		61:  {84, 2},
		62:  {84, 2},
		63:  {84, 2},
		64:  {84, 2},
		65:  {84, 1},
		66:  {84, 1},
		67:  {84, 1},
		68:  {84, 1},
		69:  {81, 2},
		70:  {81, 2},
		71:  {81, 1},
		72:  {81, 1},
		73:  {75, 2},
		74:  {75, 2},
		75:  {75, 2},
		76:  {75, 2},
		77:  {75, 2},
		78:  {75, 2},
		79:  {75, 2},
		80:  {75, 2},
		81:  {75, 1},
		82:  {75, 1},
		83:  {75, 1},
		84:  {75, 1},
		85:  {75, 1},
		86:  {75, 1},
		87:  {75, 1},
		88:  {75, 1},
		89:  {78, 2},
		90:  {78, 2},
		91:  {78, 2},
		92:  {78, 2},
		93:  {78, 1},
		94:  {78, 1},
		95:  {78, 1},
		96:  {78, 1},
		97:  {30, 4},
		98:  {30, 4},
		99:  {55, 4},
		100: {23, 4},
		101: {56, 4},
		102: {44, 1},
		103: {44, 1},
		104: {27, 4},
		105: {26, 4},
		106: {41, 1},
		107: {41, 1},
		108: {41, 1},
		109: {32, 4},
		110: {31, 4},
		111: {31, 4},
		112: {32, 4},
		113: {40, 4},
		114: {89, 1},
		115: {89, 1},
		116: {57, 4},
		117: {88, 1},
		118: {88, 1},
		119: {88, 1},
		120: {38, 4},
		121: {39, 2},
		122: {87, 1},
		123: {87, 1},
		124: {87, 1},
		125: {54, 4},
		126: {58, 4},
		127: {63, 1},
		128: {63, 1},
		129: {53, 4},
		130: {53, 5},
		131: {102, 5},
		132: {102, 4},
		133: {25, 5},
		134: {25, 4},
	}

	yyXErrors = map[yyXError]string{}

	yyParseTab = [202][]uint16{
		// 0
		{2: 157, 159, 141, 143, 151, 140, 147, 155, 142, 154, 150, 152, 153, 144, 139, 148, 156, 158, 149, 146, 145, 49: 138, 70: 136, 73: 137},
		{1: 135},
		{1: 134, 157, 159, 141, 143, 151, 140, 147, 155, 142, 154, 150, 152, 153, 144, 139, 148, 156, 158, 149, 146, 145, 49: 336},
		{1: 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132},
		{1: 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131},
		// 5
		{1: 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130},
		{208, 23: 335},
		{330, 23: 327, 27: 326, 38: 329, 40: 328, 78: 325},
		{291, 23: 285, 26: 289, 283, 38: 287, 40: 284, 53: 290, 288, 57: 286, 75: 282},
		{188, 23: 278, 26: 279, 81: 277},
		// 10
		{273, 25: 276},
		{208, 23: 275},
		{273, 25: 274},
		{273, 25: 272},
		{264, 23: 261, 25: 262, 260, 56: 263, 84: 259},
		// 15
		{251, 25: 249, 58: 250, 79: 248},
		{237, 25: 236, 31: 235, 234, 76: 233},
		{231, 30: 230, 80: 229},
		{164, 30: 163, 162, 161, 51: 228},
		{215, 23: 224, 27: 214, 39: 225, 50: 223},
		// 20
		{215, 23: 212, 27: 214, 39: 213, 50: 211, 77: 210},
		{208, 23: 207, 82: 206},
		{201, 55: 200, 74: 199},
		{188, 23: 186, 26: 187, 83: 185},
		{164, 30: 163, 162, 161, 51: 160},
		// 25
		{164, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 30: 184, 183, 182},
		{89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89},
		{88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88},
		{87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87},
		{34: 165, 48: 166, 59: 168, 62: 167},
		// 30
		{24: 180},
		{24: 177},
		{24: 172},
		{24: 169},
		{28: 170, 37: 171},
		// 35
		{25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25},
		{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24},
		{28: 174, 175, 36: 173, 41: 176},
		{29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28},
		// 40
		{27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27},
		{23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23},
		{28: 179, 175, 36: 173, 41: 178},
		{37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28},
		// 45
		{28: 179, 175, 36: 173, 41: 181},
		{38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38},
		{92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92},
		{91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91},
		{90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90},
		// 50
		{188, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 197, 26: 198},
		{108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108},
		{107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107},
		{33: 189, 190},
		{24: 193},
		// 55
		{24: 191},
		{28: 179, 175, 36: 173, 41: 192},
		{30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
		{29: 196, 42: 195, 44: 194},
		{35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35},
		// 60
		{33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33},
		{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32},
		{110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110},
		{109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109},
		{201, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 55: 205},
		// 65
		{105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105},
		{69: 202},
		{24: 203},
		{29: 196, 42: 195, 44: 204},
		{36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36},
		// 70
		{106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106},
		{208, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 209},
		{103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103},
		{33: 189},
		{104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104},
		// 75
		{1: 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115},
		{215, 23: 220, 27: 222, 39: 221},
		{95, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{93, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99},
		{94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94},
		// 80
		{33: 189, 43: 216, 52: 217},
		{24: 218},
		{14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
		{37: 219},
		{31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31},
		// 85
		{98, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102},
		{96, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101},
		{97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97},
		{215, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 226, 27: 222, 39: 227},
		{95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95},
		// 90
		{93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93},
		{98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98},
		{96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96},
		{164, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 30: 184, 183, 182},
		{231, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 30: 232},
		// 95
		{85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85},
		{34: 165, 48: 166},
		{86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86},
		{237, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 25: 247, 31: 246, 245},
		{81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81},
		// 100
		{80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80},
		{241, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79},
		{35: 238, 59: 168, 62: 167},
		{24: 239},
		{28: 240},
		// 105
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{35: 242},
		{24: 243},
		{28: 244},
		{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
		// 110
		{84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84},
		{83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83},
		{241, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82},
		{251, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 25: 257, 58: 258},
		{241, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76},
		// 115
		{75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75},
		{35: 238, 60: 252},
		{24: 253},
		{45: 256, 47: 255, 63: 254},
		{9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
		// 120
		{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8},
		{7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7},
		{241, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78},
		{77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77},
		{264, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 269, 25: 270, 268, 56: 271},
		// 125
		{70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70},
		{69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69},
		{241, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68},
		{67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67},
		{33: 189, 190, 238, 86: 265},
		// 130
		{24: 266},
		{29: 196, 42: 195, 44: 267},
		{34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34},
		{74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74},
		{73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73},
		// 135
		{241, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72},
		{71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71},
		{241, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122},
		{35: 238},
		{241, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123},
		// 140
		{1: 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124},
		{241, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125},
		{188, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 280, 26: 281},
		{64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64},
		{63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63},
		// 145
		{66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66},
		{65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65},
		{291, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 319, 26: 323, 317, 38: 321, 40: 318, 53: 324, 322, 57: 320},
		{54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54},
		{53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53},
		// 150
		{52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52},
		{51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51},
		{50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50},
		{49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49},
		{48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
		// 155
		{47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47},
		{33: 189, 190, 43: 216, 46: 294, 60: 293, 292, 64: 296, 66: 295},
		{24: 313},
		{24: 308},
		{24: 303},
		// 160
		{24: 301},
		{24: 297},
		{299, 37: 298},
		{6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6},
		{37: 300},
		// 165
		{5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},
		{45: 256, 47: 255, 63: 302},
		{10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
		{65: 305, 68: 306, 87: 304, 90: 307},
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
		// 170
		{13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
		{12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
		{11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11},
		{52: 310, 67: 311, 72: 312, 88: 309},
		{19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19},
		// 175
		{18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18},
		{17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17},
		{16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16},
		{71: 315, 85: 316, 89: 314},
		{22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22},
		// 180
		{21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21},
		{20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20},
		{62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62},
		{61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61},
		{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60},
		// 185
		{59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59},
		{58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58},
		{57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57},
		{56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56},
		{55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55},
		// 190
		{330, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 332, 27: 331, 38: 334, 40: 333},
		{42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42},
		{41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41},
		{40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40},
		{39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39},
		// 195
		{33: 189, 43: 216, 46: 294, 61: 292},
		{46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46},
		{45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45},
		{44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44},
		{43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43},
		// 200
		{1: 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129},
		{1: 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133},
	}
)

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyLexerEx interface {
	yyLexer
	Reduced(rule, state int, lval *yySymType) bool
}

func yySymName(c int) (s string) {
	x, ok := yyXLAT[c]
	if ok {
		return yySymNames[x]
	}

	if c < 0x7f {
		return __yyfmt__.Sprintf("%q", c)
	}

	return __yyfmt__.Sprintf("%d", c)
}

func yylex1(yylex yyLexer, lval *yySymType) (n int) {
	n = yylex.Lex(lval)
	if n <= 0 {
		n = yyEofCode
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("\nlex %s(%#x %d), lval: %+v\n", yySymName(n), n, n, lval)
	}
	return n
}

func yyParse(yylex yyLexer) int {
	const yyError = 98

	yyEx, _ := yylex.(yyLexerEx)
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, 200)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yyerrok := func() {
		if yyDebug >= 2 {
			__yyfmt__.Printf("yyerrok()\n")
		}
		Errflag = 0
	}
	_ = yyerrok
	yystate := 0
	yychar := -1
	var yyxchar int
	var yyshift int
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	if yychar < 0 {
		yylval.yys = yystate
		yychar = yylex1(yylex, &yylval)
		var ok bool
		if yyxchar, ok = yyXLAT[yychar]; !ok {
			yyxchar = len(yySymNames) // > tab width
		}
	}
	if yyDebug >= 4 {
		var a []int
		for _, v := range yyS[:yyp+1] {
			a = append(a, v.yys)
		}
		__yyfmt__.Printf("state stack %v\n", a)
	}
	row := yyParseTab[yystate]
	yyn = 0
	if yyxchar < len(row) {
		if yyn = int(row[yyxchar]); yyn != 0 {
			yyn += yyTabOfs
		}
	}
	switch {
	case yyn > 0: // shift
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		yyshift = yyn
		if yyDebug >= 2 {
			__yyfmt__.Printf("shift, and goto state %d\n", yystate)
		}
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	case yyn < 0: // reduce
	case yystate == 1: // accept
		if yyDebug >= 2 {
			__yyfmt__.Println("accept")
		}
		goto ret0
	}

	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			if yyDebug >= 1 {
				__yyfmt__.Printf("no action for %s in state %d\n", yySymName(yychar), yystate)
			}
			msg, ok := yyXErrors[yyXError{yystate, yyxchar}]
			if !ok {
				msg, ok = yyXErrors[yyXError{yystate, -1}]
			}
			if !ok && yyshift != 0 {
				msg, ok = yyXErrors[yyXError{yyshift, yyxchar}]
			}
			if !ok {
				msg, ok = yyXErrors[yyXError{yyshift, -1}]
			}
			if yychar > 0 {
				ls := yyTokenLiteralStrings[yychar]
				if ls == "" {
					ls = yySymName(yychar)
				}
				if ls != "" {
					switch {
					case msg == "":
						msg = __yyfmt__.Sprintf("unexpected %s", ls)
					default:
						msg = __yyfmt__.Sprintf("unexpected %s, %s", ls, msg)
					}
				}
			}
			if msg == "" {
				msg = "syntax error"
			}
			yylex.Error(msg)
			Nerrs++
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				row := yyParseTab[yyS[yyp].yys]
				if yyError < len(row) {
					yyn = int(row[yyError]) + yyTabOfs
					if yyn > 0 { // hit
						if yyDebug >= 2 {
							__yyfmt__.Printf("error recovery found error shift in state %d\n", yyS[yyp].yys)
						}
						yystate = yyn /* simulate a shift of "error" */
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery failed\n")
			}
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yySymName(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}

			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	r := -yyn
	x0 := yyReductions[r]
	x, n := x0.xsym, x0.components
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= n
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	exState := yystate
	yystate = int(yyParseTab[yyS[yyp].yys][x]) + yyTabOfs
	/* reduction by production r */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce using rule %v (%s), and goto state %d\n", r, yySymNames[x], yystate)
	}

	switch r {
	case 1:
		{
			AddAST()
		}
	case 4:
		{
			AddInstruccion("pause")
		}
	case 5:
		{
			AddInstruccion("logout")
		}
	case 6:
		{
			EjecutarExec()
		}
	case 7:
		{
			AddInstruccion("mkdisk")
		}
	case 8:
		{
			AddInstruccion("fdisk")
		}
	case 9:
		{
			AddInstruccion("mount")
		}
	case 10:
		{
			AddParametro()
			AddInstruccion("unmount")
		}
	case 11:
		{
			AddParametro()
			AddInstruccion("rmdisk")
		}
	case 12:
		{
			AddParametro()
			AddInstruccion("loss")
		}
	case 13:
		{
			AddParametro()
			AddInstruccion("recovery")
		}
	case 14:
		{
			AddInstruccion("rep")
		}
	case 15:
		{
			AddInstruccion("mkfs")
		}
	case 16:
		{
			AddInstruccion("login")
		}
	case 17:
		{
			AddInstruccion("mkgrp")
		}
	case 18:
		{
			AddInstruccion("mkusr")
		}
	case 19:
		{
			AddInstruccion("mkfile")
		}
	case 20:
		{
			AddInstruccion("mkdir")
		}
	case 21:
		{
			AddInstruccion("rem")
		}
	case 22:
		{
			AddInstruccion("cat")
		}
	case 23:
		{
			AddInstruccion("ren")
		}
	case 24:
		{
			AddInstruccion("chgrp")
		}
	case 25:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 26:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 27:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 28:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 29:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 30:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 31:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 32:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 33:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 34:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 35:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 36:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 37:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 38:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 39:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 40:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 41:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 42:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 43:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 44:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 45:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 46:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 47:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 48:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 49:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 50:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 51:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 52:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 53:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 54:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 55:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 56:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 57:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 58:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 59:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 60:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 61:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 62:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 63:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 64:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 65:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 66:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 67:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 68:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 69:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 70:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 71:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 72:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 73:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 74:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 75:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 76:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 77:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 78:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 79:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 80:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			AddParametro()
		}
	case 81:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 82:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 83:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 84:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 85:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 86:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 87:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 88:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 89:
		{
			yyVAL.value = yyS[yypt-1].value
			AddParametro()
		}
	case 90:
		{
			yyVAL.value = yyS[yypt-1].value
			AddParametro()
		}
	case 91:
		{
			yyVAL.value = yyS[yypt-1].value
			AddParametro()
		}
	case 92:
		{
			yyVAL.value = yyS[yypt-1].value
			AddParametro()
		}
	case 93:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 94:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 95:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 96:
		{
			yyVAL.value = yyS[yypt-0].value
			AddParametro()
		}
	case 97:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 98:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 99:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 100:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			auxPath = yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 101:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			auxPath = yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 102:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 103:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 104:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 105:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 106:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 107:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 108:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 109:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 110:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 111:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 112:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 113:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 114:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 115:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 116:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 117:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 118:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 119:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 120:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 121:
		{
			yyVAL.value = yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-0].value, yyS[yypt-0].value)
		}
	case 122:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 123:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 124:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 125:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 126:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 127:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 128:
		{
			yyVAL.value = yyS[yypt-0].value
		}
	case 129:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 130:
		{
			yyVAL.value = yyS[yypt-4].value + yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-3].value, "-"+yyS[yypt-0].value)
		}
	case 131:
		{
			yyVAL.value = yyS[yypt-4].value + yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
		}
	case 132:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
		}
	case 133:
		{
			yyVAL.value = yyS[yypt-4].value + yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}
	case 134:
		{
			yyVAL.value = yyS[yypt-3].value + yyS[yypt-2].value + yyS[yypt-1].value + yyS[yypt-0].value
			CrearParametro(yyS[yypt-2].value, yyS[yypt-0].value)
		}

	}

	if yyEx != nil && yyEx.Reduced(r, exState, &yyVAL) {
		return -1
	}
	goto yystack /* stack new state and value */
}

// CrearParametro da un valor nuevo al parámetro axuliar
func CrearParametro(tipo string, valor string) {
	oParametro = arbol.Parametro{Tipo: tipo, Valor: valor}
}

// CrearInstruccion da un valor nuevo a la intruccion auxiliar
func CrearInstruccion(tipo string) {
	oInstruccion = arbol.Instruccion{Tipo: tipo}
}

// AddParametro añade el parámetro auxiliar a la lista de parametros de la instrucción actual
func AddParametro() {
	oInstruccion.Parametros = append(oInstruccion.Parametros, oParametro)
}

// AddInstruccion añade el parámetro auxiliar a la lista de parametros de la instrucción actual
func AddInstruccion(tipo string) {
	oInstruccion.Tipo = tipo
	lInstruccion = append(lInstruccion, oInstruccion)
	oInstruccion = arbol.Instruccion{}
}

// AddAST añade lista de instrucciones para ejecutar
func AddAST() {
	ast := arbol.AST{}
	ast.Instrucciones = lInstruccion
	lInstruccion = []arbol.Instruccion{}
	lAST = append(lAST, ast)
}

func EjecutarExec() {
	if file, err := os.Open(auxPath); err == nil {
		yyParse(newLexer(bufio.NewReader(file)))

		ast := lAST[len(lAST)-1]
		ast.EjecutarAST()
		lAST = lAST[:len(lAST)-1]

		fmt.Println("Se ha ejecutado el archivo con èxito")
	} else {
		fmt.Println("No se ha podido abrir el archivo")
		log.Panic(err)
	}
}
